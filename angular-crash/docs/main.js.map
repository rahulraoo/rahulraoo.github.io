{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/button/button.component.ts","./src/app/components/button/button.component.html","./src/environments/environment.ts","./src/app/components/tasks/tasks.component.html","./src/app/components/tasks/tasks.component.ts","./src/app/components/task-item/task-item.component.ts","./src/app/components/task-item/task-item.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-task/add-task.component.ts","./src/app/components/add-task/add-task.component.html","./src/app/services/task.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  \n  title: string = \"Hello Rahul\"\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n  toggleAddTask() {\n    console.log(\"Task added\");\n  }\n}\n","<header>{{ title }}\n    <app-button color=\"green\" text=\"add\" (btnClick) =\"toggleAddTask()\"></app-button>\n</header>\n","import { Component, OnInit,Input,Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n  \n  @Input() text:string;\n  @Input() color:string;\n  @Output() btnClick = new EventEmitter(); \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n   \n  onClick() {\n    this.btnClick.emit();\n  }\n\n}\n","<button [ngStyle]=\"{'background-color' : color}\" class=\"btn\"\n(click)=\"onClick()\">{{text}}</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n<app-add-task (onAddTask)=\"addTask($event)\"></app-add-task>\n\n<app-task-item *ngFor=\"let task of tasks\" [task]=\"task\" (onDeleteTask)=\"deleteTask(task)\"\n    (onToggleReminder)=\"toggleReminder(task)\">{{task.text}}</app-task-item>","import { Component, OnInit } from '@angular/core';\nimport {Task} from '../../Task';\nimport {TaskService} from '../../services/task.service'\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  \n  tasks: Task[] = [];\n\n  constructor(private taskService:TaskService) { }\n  \n  ngOnInit(): void {\n    this.taskService.getTasks().subscribe((tasks) => (\n      this.tasks = tasks \n    ));\n  }\n\n  deleteTask(task: Task) {\n    this.taskService.deleteTasks(task)\n    .subscribe(() => this.tasks =  this.tasks\n    .filter((t) => t.id !== task.id));\n  }\n\n  toggleReminder(task: Task) {\n    task.reminder = !task.reminder;\n    this.taskService.updateTaskReminder(task).subscribe();\n  }\n\n  addTask(task: Task) {\n    this.taskService.addTask(task).subscribe((task) => {\n      this.tasks.push(task);\n    })\n  }\n\n\n}\n","import { Component, OnInit, Input,EventEmitter, Output } from '@angular/core';\nimport {Task} from '../../Task';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\n@Component({\n  selector: 'app-task-item',\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.css']\n})\nexport class TaskItemComponent implements OnInit {\n  \n  @Input() task: Task;\n  @Output() onDeleteTask:EventEmitter<Task> = new EventEmitter();\n  @Output() onToggleReminder:EventEmitter<Task> = new EventEmitter();\n  faTimes = faTimes;\n  constructor() { }\n\n  onDelete(item: Task) {\n    this.onDeleteTask.emit();\n  }\n\n  onToggle(item: Task) {\n    this.onToggleReminder.emit();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"task\" \n[ngClass]=\"{reminder: task.reminder}\"\n(dblclick)=\"onToggle(task)\">\n    <h3>{{task.text}} <fa-icon (click)=\"onDelete(task)\" [ngStyle]=\"{'color' : 'red'}\"[icon]=\"faTimes\"></fa-icon></h3>\n    <p>{{task.day}}</p>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'task tracker';\n}\n","<div class=\"container\">\n  <app-header></app-header>\n  <app-tasks></app-tasks>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { TaskItemComponent } from './components/task-item/task-item.component';\nimport { AddTaskComponent } from './components/add-task/add-task.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ButtonComponent,\n    TasksComponent,\n    TaskItemComponent,\n    AddTaskComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    FontAwesomeModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit,Output,EventEmitter } from '@angular/core';\nimport {Task} from '../../Task';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n\n\n  @Output() onAddTask:EventEmitter<Task> = new EventEmitter();\n  text: string;\n  day: string;\n  reminder: boolean = false;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n\n    if(!this.text || !this.day) {\n      alert(\"please enter the necessary details\");\n      return;\n    }\n\n    const newTask = {\n\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder\n\n    };\n\n    this.onAddTask.emit(newTask);\n\n    this.text = '';\n    this.day = '';\n    this.reminder = false;\n\n  }\n}\n","<form class=\"add-form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-control\">\n        <label for=\"text\">Task</label>\n        <input type=\"text\" name=\"text\" [(ngModel)]=\"text\" id=\"text\" placeholder=\"Add Task\">\n    </div>\n    <div class=\"form-control\">\n        <label for=\"text\">Day & Time</label>\n        <input type=\"text\" name=\"day\" [(ngModel)]=\"day\" id=\"day\" placeholder=\"Add Day & time\">\n    </div>\n    <div class=\"form-control form-control-check\">\n        <label for=\"reminder\">Set Reminder</label>\n        <input type=\"checkbox\" name=\"reminder\" [(ngModel)]=\"reminder\" id=\"reminder\">\n    </div>\n    <div class=\"form-control\">\n        <input type=\"submit\" class=\"btn btn-block\"  value=\"Save Task\">\n    </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { TASKS } from '../mock-tasks';\nimport { Task } from '../Task';\nimport { Observable, of } from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  \n  private apiURL:string = \"http://localhost:5000/tasks\"\n  constructor(private http:HttpClient) { }\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.apiURL);\n  }\n\n  deleteTasks(task: Task) : Observable<Task> {\n    const url = `${this.apiURL}/${task.id}`;\n    return this.http.delete<Task>(url);\n  }\n\n  updateTaskReminder(task: Task) : Observable<Task> {\n    const url = `${this.apiURL}/${task.id}`;\n    return this.http.put<Task>(url, task, httpOptions);\n  }\n\n  addTask(task: Task) : Observable<Task> {\n    return this.http.post<Task>(this.apiURL, task, httpOptions);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}